generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id               String            @id @default(uuid())
  phoneNumber      String?           @unique @map("phone_number")
  name             String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  metadata         UserMetadata[]
  messages         Message[]
  emotionalProfile EmotionalProfile?

  @@map("users")
}

model UserMetadata {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id])
  key       String
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, key])
  @@map("user_metadata")
}

model Message {
  id           String   @id
  remoteJid    String
  pushName     String
  conversation String?  @db.Text
  dateTime     DateTime
  eventType    String
  messageType  String
  fromMe       Boolean
  answered     Boolean  @default(false)
  createdAt    DateTime @default(now())

  // Sentiment analysis fields - consolidated 
  sentiment Float? // Score from -1.0 to 1.0
  emotions  String? @db.Text // JSON array of emotions with intensity: [{"name": "joy", "intensity": 0.8}]

  // User reference
  userId String? @map("user_id")
  user   User?   @relation(fields: [userId], references: [id])

  @@map("messages")
}

model EmotionalProfile {
  id     String @id @default(uuid())
  userId String @unique @map("user_id")
  user   User   @relation(fields: [userId], references: [id])

  baselineSentiment Float // User's baseline sentiment
  commonEmotions    String? @db.Text // JSON array of common emotions
  preferenceData    String? @db.Text // JSON object with positive/negative topics

  lastUpdated DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("emotional_profiles")
}
